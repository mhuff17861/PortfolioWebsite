# Generated by Django 5.0.7 on 2024-07-10 16:36

import django.db.models.deletion
import django.db.models.manager
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Author',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField()),
                ('bio', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Visual_Poetry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.TextField(max_length=100)),
                ('image', models.ImageField(upload_to='visualpoetry')),
                ('image_alt_text', models.TextField(default='picture description', max_length=50)),
                ('poem', models.TextField()),
                ('inspirations', models.TextField()),
                ('date_created', models.DateField()),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            managers=[
                ('poems', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='Visual_Poetry_Author',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('author_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='authors', to='writing.author')),
                ('visual_poetry_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='authors', to='writing.visual_poetry')),
            ],
            managers=[
                ('authors', django.db.models.manager.Manager()),
            ],
        ),
    ]
